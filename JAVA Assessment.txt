import java.util.*;

public class Main {
    public static void main(String[] args) {
        // Task 1: Create an array and shuffle it
        Integer[] array = {1, 2, 3, 4, 5, 6, 7};
        List<Integer> list = Arrays.asList(array);
        Collections.shuffle(list);
        System.out.println("Shuffled Array: " + list);

        // Task 2: Convert a Roman Number to an integer
        Scanner scanner = new Scanner(System.in);
        System.out.print("Enter a Roman Number (e.g., IX): ");
        String romanInput = scanner.nextLine().toUpperCase();
        int romanToInteger = romanToInteger(romanInput);
        System.out.println("Integer value of " + romanInput + " is: " + romanToInteger);

        // Task 3: Check if the input is a pangram
        System.out.print("Enter a sentence: ");
        String sentence = scanner.nextLine().toLowerCase();
        boolean isPangram = isPangram(sentence);
        if (isPangram) {
            System.out.println("The input is a pangram.");
        } else {
            System.out.println("The input is not a pangram.");
        }

        scanner.close();
    }

    // Helper function to convert Roman Number to integer
    public static int romanToInteger(String s) {
        Map<Character, Integer> romanToInt = new HashMap<>();
        romanToInt.put('I', 1);
        romanToInt.put('V', 5);
        romanToInt.put('X', 10);
        romanToInt.put('L', 50);
        romanToInt.put('C', 100);
        romanToInt.put('D', 500);
        romanToInt.put('M', 1000);

        int result = 0;
        int prevValue = 0;

        for (int i = s.length() - 1; i >= 0; i--) {
            int curValue = romanToInt.get(s.charAt(i));
            if (curValue < prevValue) {
                result -= curValue;
            } else {
                result += curValue;
            }
            prevValue = curValue;
        }

        return result;
    }

    // Helper function to check if a sentence is a pangram
    public static boolean isPangram(String sentence) {
        Set<Character> alphabetSet = new HashSet<>();
        for (char c = 'a'; c <= 'z'; c++) {
            alphabetSet.add(c);
        }

        for (char c : sentence.toCharArray()) {
            alphabetSet.remove(c);
            if (alphabetSet.isEmpty()) {
                return true;
            }
        }

        return false;
    }
}